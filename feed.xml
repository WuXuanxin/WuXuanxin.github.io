<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://wuxuanxin.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://wuxuanxin.github.io/" rel="alternate" type="text/html"/><updated>2025-03-22T13:41:39+00:00</updated><id>https://wuxuanxin.github.io/feed.xml</id><title type="html">blank</title><entry><title type="html">How to Build a LINE ChatGPT Chatbot with Zero Coding Effort</title><link href="https://wuxuanxin.github.io/blog/2025/linechatbot/" rel="alternate" type="text/html" title="How to Build a LINE ChatGPT Chatbot with Zero Coding Effort"/><published>2025-03-20T17:00:00+00:00</published><updated>2025-03-20T17:00:00+00:00</updated><id>https://wuxuanxin.github.io/blog/2025/linechatbot</id><content type="html" xml:base="https://wuxuanxin.github.io/blog/2025/linechatbot/"><![CDATA[<p>In this blog, I‚Äôll share my experience of creating a LINE chatbot powered by OpenAI‚Äôs ChatGPT. The goal is to attach a LINE official account with an auto-reply chatbot function that responds based on the user‚Äôs current message and conversation history. The best part? No coding is required!</p> <div class="container" style="display: flex; gap: 20px;"> <section class="left-column" style="flex: 1;"> <header> <h2>Example: Chatbot Conversation</h2> </header> <article> <p>Here is an example of a conversation between a user and a chatbot, showcasing the chatbot's context-aware responses:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/zero_code_chatbot/example-480.webp 480w,/assets/img/zero_code_chatbot/example-800.webp 800w,/assets/img/zero_code_chatbot/example-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/zero_code_chatbot/example.jpg" class="img-fluid rounded z-depth-1" width="60%" height="40%" alt="Example of a chatbot conversation" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>To achieve this, you will need the following tools:</p> <ol> <li><strong>OpenAI API</strong></li> <li><strong>LINE Official Account</strong></li> <li><strong>MAKE Account</strong>: To automate the workflow between LINE and OpenAI.</li> </ol> <p>If you haven't set them up yet, refer to the instructions on the right. Skip this section if you already have them.</p> </article> </section> <aside class="right-column" style="flex: 1;"> <header> <h1>Setup Instructions</h1> </header> <article> <p>If you haven't set up the required tools yet, follow the steps below. Skip this section if you already have them.</p> <section> <h2>1. Create an OpenAI Account and Get Your API Key</h2> <h3>If you don‚Äôt have an OpenAI account:</h3> <ol> <li>Sign up at <a href="https://auth.openai.com/create-account" target="_blank">OpenAI Create Account</a>.</li> <li>Generate your first API key during account creation or later. <strong>Important</strong>: Save your API key locally. You won‚Äôt be able to see it again!</li> <li>Check OpenAI‚Äôs <a href="https://openai.com/pricing" target="_blank">pricing</a> and decide how many credits to purchase.</li> </ol> <h3>If you already have an account:</h3> <ol> <li>Log in at <a href="https://auth.openai.com/log-in" target="_blank">OpenAI Log In</a>.</li> <li>Go to <strong>Settings ‚öôÔ∏è ‚Üí PROJECT ‚Üí API keys ‚Üí + Create new secret key</strong>.</li> </ol> </section> <section> <h2>2. Create a LINE Official Account</h2> <p>Follow the official instructions to create a LINE Official Account:</p> <p><a href="https://help2.line.me/official_account/android/categoryId/20010172/pc?lang=en&amp;contentId=20013134" target="_blank">LINE Official Account Setup Guide</a></p> </section> <section> <h2>3. Get Your Channel Access Token and Connect to MAKE</h2> <ol> <li>Create a <strong>MAKE</strong> account (formerly Integromat).</li> <li>Connect it to LINE Developers. Refer to this guide (in Japanese) for detailed steps: <a href="https://kiko-an.com/make-integromatlinebot/" target="_blank">MAKE and LINE Integration Guide</a>.</li> </ol> </section> <footer> <p><strong>Note</strong>: Ensure you have all the required credentials (API keys, tokens, etc.) saved securely before proceeding.</p> </footer> </article> </aside> </div> <hr/> <p>## Step 2: Set Up LINE</p> <p>### Create a LINE Official Account</p> <ol> <li>Follow the official instructions to create a LINE official account:<br/> <a href="https://help2.line.me/official_account/android/categoryId/20010172/pc?lang=en&amp;contentId=20013134">https://help2.line.me/official_account/android/categoryId/20010172/pc?lang=en&amp;contentId=20013134</a>.</li> </ol> <p>### Get Your Channel Access Token Create a <strong>MAKE</strong> account and connect it to LINE Developers. Refer to this guide (in Japanese) for detailed steps:<br/> <a href="https://kiko-an.com/make-integromatlinebot/">https://kiko-an.com/make-integromatlinebot/</a>.</p> <p>&lt;/div&gt; &lt;/div&gt;</p> <hr/> <h2 id="step-3-build-the-chatbot-workflow-in-make">Step 3: Build the Chatbot Workflow in MAKE</h2> <p>I created a chatbot for Japanese language learning. Here‚Äôs how it works:</p> <h3 id="overview">Overview</h3> <ul> <li>The chatbot receives a user‚Äôs message, retrieves conversation history from the database, aggregates the data, sends it to OpenAI, and replies to the user.</li> </ul> <h3 id="behind-the-scenes-make-scenarios">Behind the Scenes: MAKE Scenarios</h3> <ol> <li><strong>LINE ‚Üí Watch Events</strong>: Add your webhook to listen for user messages.</li> <li><strong>Data Store Search Records</strong>: <ul> <li>Search the user‚Äôs message history within the last 2 minutes (adjust the <code class="language-plaintext highlighter-rouge">{-2}</code> value as needed).</li> </ul> </li> <li><strong>Text Aggregator</strong>: <ul> <li>Aggregate the current query and historical queries from the Data Store.</li> </ul> </li> <li><strong>Data Store</strong>: <ul> <li>Search the chatbot‚Äôs reply history to the user within the last 2 minutes.</li> </ul> </li> <li><strong>Tools</strong>: <ul> <li>Aggregate the conversation history and current query to prepare the input for OpenAI.</li> </ul> </li> <li><strong>OpenAI</strong>: <ul> <li>Configure the model (e.g., GPT-3.5 or GPT-4).</li> <li>Set up messages: <ul> <li><strong>Message 1</strong>: Your custom prompt (edit in Text Content).</li> <li><strong>Message 2</strong>: User query history (from the first Data Store).</li> <li><strong>Message 3</strong>: Chatbot reply history (from the second Data Store).</li> <li><strong>Message 4</strong>: Current user query.</li> </ul> </li> <li>Adjust hyperparameters like <code class="language-plaintext highlighter-rouge">temperature</code> and <code class="language-plaintext highlighter-rouge">top_p</code> as needed.</li> </ul> </li> <li><strong>Ignore Module</strong>: <ul> <li>Acts as an error handler to keep the scenario running even if errors occur. Learn more <a href="https://www.make.com/en/help/errors/error-handlers/ignore-error-handler">here</a>.</li> </ul> </li> <li><strong>LINE ‚Üí Send a Reply Message</strong>: <ul> <li>Send the chatbot‚Äôs reply (from OpenAI) back to the user.</li> </ul> </li> <li><strong>Ignore Module</strong>: <ul> <li>Again, acts as an error handler to keep the scenario running even if errors occur.</li> </ul> </li> <li><strong>Data Store</strong>: <ul> <li>Append the user‚Äôs query to the Data Store.</li> </ul> </li> <li><strong>Data Store</strong>: <ul> <li>Append the chatbot‚Äôs reply to the Data Store.</li> </ul> </li> </ol> <hr/> <h2 id="final-thoughts">Final Thoughts</h2> <p>Building a LINE chatbot with OpenAI and Make is a powerful way to create intelligent, automated interactions. Whether you‚Äôre building a language-learning bot or a customer support assistant, this no-code approach makes it accessible to everyone.</p> <p>Feel free to tweak the workflow to suit your needs, and let me know if you have any questions!</p> <hr/> <p><strong>Happy bot-building!</strong> üöÄ</p>]]></content><author><name></name></author><category term="Workflow"/><category term="ZeroCodingChatbot"/><summary type="html"><![CDATA[In this blog, I‚Äôll share my experience of creating a LINE chatbot powered by OpenAI‚Äôs ChatGPT. The goal is to attach a LINE official account with an auto-reply chatbot function that responds based on the user‚Äôs current message and conversation history. The best part? No coding is required!]]></summary></entry></feed>